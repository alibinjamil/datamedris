// Generated by CodeGenerator
// DO NOT MODIFY!
using RIS.RISLibrary.Fields;
using System;
namespace RIS.RISLibrary.Objects.RIS
{
	public class ImageObject : RISObject
	{
		override public string GetTableName()
		{
			return "tImages";
		}
		override public bool HasAccessColumns()
		{
			return true;
		}
		PrimaryKeyField m_ImageId = new PrimaryKeyField("ImageId",null,true);
		override public PrimaryKeyField GetPrimaryKey()
		{
			return m_ImageId;
		}
		public PrimaryKeyField ImageId
		{
			get
			{
				return this.m_ImageId;
			}
			set
			{
				this.m_ImageId = value;
			}
		}
		IntField m_SeriesId = new IntField("SeriesId",null);
		public IntField SeriesId
		{
			get
			{
				return this.m_SeriesId;
			}
			set
			{
				this.m_SeriesId = value;
			}
		}
		TextField m_ImageInstance = new TextField("ImageInstance",null);
		public TextField ImageInstance
		{
			get
			{
				return this.m_ImageInstance;
			}
			set
			{
				this.m_ImageInstance = value;
			}
		}
		TextField m_ImageClassUI = new TextField("ImageClassUI",null);
		public TextField ImageClassUI
		{
			get
			{
				return this.m_ImageClassUI;
			}
			set
			{
				this.m_ImageClassUI = value;
			}
		}
		IntField m_ImageNumber = new IntField("ImageNumber",null);
		public IntField ImageNumber
		{
			get
			{
				return this.m_ImageNumber;
			}
			set
			{
				this.m_ImageNumber = value;
			}
		}
		DateTimeField m_ImageDate = new DateTimeField("ImageDate",null);
		public DateTimeField ImageDate
		{
			get
			{
				return this.m_ImageDate;
			}
			set
			{
				this.m_ImageDate = value;
			}
		}
		IntField m_EchoNumber = new IntField("EchoNumber",null);
		public IntField EchoNumber
		{
			get
			{
				return this.m_EchoNumber;
			}
			set
			{
				this.m_EchoNumber = value;
			}
		}
		IntField m_NumberOfFrames = new IntField("NumberOfFrames",null);
		public IntField NumberOfFrames
		{
			get
			{
				return this.m_NumberOfFrames;
			}
			set
			{
				this.m_NumberOfFrames = value;
			}
		}
		DateTimeField m_AcquiredDate = new DateTimeField("AcquiredDate",null);
		public DateTimeField AcquiredDate
		{
			get
			{
				return this.m_AcquiredDate;
			}
			set
			{
				this.m_AcquiredDate = value;
			}
		}
		TextField m_SliceLocation = new TextField("SliceLocation",null);
		public TextField SliceLocation
		{
			get
			{
				return this.m_SliceLocation;
			}
			set
			{
				this.m_SliceLocation = value;
			}
		}
		IntField m_NumberOfSamples = new IntField("NumberOfSamples",null);
		public IntField NumberOfSamples
		{
			get
			{
				return this.m_NumberOfSamples;
			}
			set
			{
				this.m_NumberOfSamples = value;
			}
		}
		TextField m_PhotoMetric = new TextField("PhotoMetric",null);
		public TextField PhotoMetric
		{
			get
			{
				return this.m_PhotoMetric;
			}
			set
			{
				this.m_PhotoMetric = value;
			}
		}
		IntField m_Rows = new IntField("Rows",null);
		public IntField Rows
		{
			get
			{
				return this.m_Rows;
			}
			set
			{
				this.m_Rows = value;
			}
		}
		IntField m_Columns = new IntField("Columns",null);
		public IntField Columns
		{
			get
			{
				return this.m_Columns;
			}
			set
			{
				this.m_Columns = value;
			}
		}
		IntField m_BitsStored = new IntField("BitsStored",null);
		public IntField BitsStored
		{
			get
			{
				return this.m_BitsStored;
			}
			set
			{
				this.m_BitsStored = value;
			}
		}
		TextField m_Path = new TextField("Path",null);
		public TextField Path
		{
			get
			{
				return this.m_Path;
			}
			set
			{
				this.m_Path = value;
			}
		}
		TextField m_DeviceName = new TextField("DeviceName",null);
		public TextField DeviceName
		{
			get
			{
				return this.m_DeviceName;
			}
			set
			{
				this.m_DeviceName = value;
			}
		}
		override public Field[] GetFields()
		{
			Field[] fields = new Field[16];
			fields[0] = m_SeriesId;
			fields[1] = m_ImageInstance;
			fields[2] = m_ImageClassUI;
			fields[3] = m_ImageNumber;
			fields[4] = m_ImageDate;
			fields[5] = m_EchoNumber;
			fields[6] = m_NumberOfFrames;
			fields[7] = m_AcquiredDate;
			fields[8] = m_SliceLocation;
			fields[9] = m_NumberOfSamples;
			fields[10] = m_PhotoMetric;
			fields[11] = m_Rows;
			fields[12] = m_Columns;
			fields[13] = m_BitsStored;
			fields[14] = m_Path;
			fields[15] = m_DeviceName;
			return fields;
		}
		override public Field[] GetAllFields()
		{
			Field[] fields = new Field[17];
			fields[0] = m_ImageId;
			fields[1] = m_SeriesId;
			fields[2] = m_ImageInstance;
			fields[3] = m_ImageClassUI;
			fields[4] = m_ImageNumber;
			fields[5] = m_ImageDate;
			fields[6] = m_EchoNumber;
			fields[7] = m_NumberOfFrames;
			fields[8] = m_AcquiredDate;
			fields[9] = m_SliceLocation;
			fields[10] = m_NumberOfSamples;
			fields[11] = m_PhotoMetric;
			fields[12] = m_Rows;
			fields[13] = m_Columns;
			fields[14] = m_BitsStored;
			fields[15] = m_Path;
			fields[16] = m_DeviceName;
			return fields;
		}
	}
}
