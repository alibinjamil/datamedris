// Generated by CodeGenerator
// DO NOT MODIFY!
using RIS.RISLibrary.Fields;
using System;
namespace RIS.RISLibrary.Objects.DICOM
{
	public class DICOMSeriesObject : DICOMObject
	{
		override public string GetTableName()
		{
			return "DICOMSeries";
		}
		override public bool HasAccessColumns()
		{
			return false;
		}
		PrimaryKeyField m_SeriesInstance = new PrimaryKeyField("SeriesInst",null,false);
		override public PrimaryKeyField GetPrimaryKey()
		{
			return m_SeriesInstance;
		}
		public PrimaryKeyField SeriesInstance
		{
			get
			{
				return this.m_SeriesInstance;
			}
			set
			{
				this.m_SeriesInstance = value;
			}
		}
		TextField m_SeriesDate = new TextField("SeriesDate",null);
		public TextField SeriesDate
		{
			get
			{
				return this.m_SeriesDate;
			}
			set
			{
				this.m_SeriesDate = value;
			}
		}
		TextField m_SeriesTime = new TextField("SeriesTime",null);
		public TextField SeriesTime
		{
			get
			{
				return this.m_SeriesTime;
			}
			set
			{
				this.m_SeriesTime = value;
			}
		}
		TextField m_SeriesNumber = new TextField("SeriesNumb",null);
		public TextField SeriesNumber
		{
			get
			{
				return this.m_SeriesNumber;
			}
			set
			{
				this.m_SeriesNumber = value;
			}
		}
		TextField m_Description = new TextField("SeriesDesc",null);
		public TextField Description
		{
			get
			{
				return this.m_Description;
			}
			set
			{
				this.m_Description = value;
			}
		}
		TextField m_PatientPosition = new TextField("PatientPos",null);
		public TextField PatientPosition
		{
			get
			{
				return this.m_PatientPosition;
			}
			set
			{
				this.m_PatientPosition = value;
			}
		}
		TextField m_Modality = new TextField("Modality",null);
		public TextField Modality
		{
			get
			{
				return this.m_Modality;
			}
			set
			{
				this.m_Modality = value;
			}
		}
		TextField m_ContrastBo = new TextField("ContrastBo",null);
		public TextField ContrastBo
		{
			get
			{
				return this.m_ContrastBo;
			}
			set
			{
				this.m_ContrastBo = value;
			}
		}
		TextField m_Manufactur = new TextField("Manufactur",null);
		public TextField Manufactur
		{
			get
			{
				return this.m_Manufactur;
			}
			set
			{
				this.m_Manufactur = value;
			}
		}
		TextField m_ModelName = new TextField("ModelName",null);
		public TextField ModelName
		{
			get
			{
				return this.m_ModelName;
			}
			set
			{
				this.m_ModelName = value;
			}
		}
		TextField m_BodyPartEx = new TextField("BodyPartEx",null);
		public TextField BodyPartEx
		{
			get
			{
				return this.m_BodyPartEx;
			}
			set
			{
				this.m_BodyPartEx = value;
			}
		}
		TextField m_ProtocolNa = new TextField("ProtocolNa",null);
		public TextField ProtocolNa
		{
			get
			{
				return this.m_ProtocolNa;
			}
			set
			{
				this.m_ProtocolNa = value;
			}
		}
		TextField m_FrameOfRef = new TextField("FrameOfRef",null);
		public TextField FrameOfRef
		{
			get
			{
				return this.m_FrameOfRef;
			}
			set
			{
				this.m_FrameOfRef = value;
			}
		}
		TextField m_SeriesPat = new TextField("SeriesPat",null);
		public TextField SeriesPat
		{
			get
			{
				return this.m_SeriesPat;
			}
			set
			{
				this.m_SeriesPat = value;
			}
		}
		TextField m_StudyInsta = new TextField("StudyInsta",null);
		public TextField StudyInsta
		{
			get
			{
				return this.m_StudyInsta;
			}
			set
			{
				this.m_StudyInsta = value;
			}
		}
		override public Field[] GetFields()
		{
			Field[] fields = new Field[14];
			fields[0] = m_SeriesDate;
			fields[1] = m_SeriesTime;
			fields[2] = m_SeriesNumber;
			fields[3] = m_Description;
			fields[4] = m_PatientPosition;
			fields[5] = m_Modality;
			fields[6] = m_ContrastBo;
			fields[7] = m_Manufactur;
			fields[8] = m_ModelName;
			fields[9] = m_BodyPartEx;
			fields[10] = m_ProtocolNa;
			fields[11] = m_FrameOfRef;
			fields[12] = m_SeriesPat;
			fields[13] = m_StudyInsta;
			return fields;
		}
		override public Field[] GetAllFields()
		{
			Field[] fields = new Field[15];
			fields[0] = m_SeriesInstance;
			fields[1] = m_SeriesDate;
			fields[2] = m_SeriesTime;
			fields[3] = m_SeriesNumber;
			fields[4] = m_Description;
			fields[5] = m_PatientPosition;
			fields[6] = m_Modality;
			fields[7] = m_ContrastBo;
			fields[8] = m_Manufactur;
			fields[9] = m_ModelName;
			fields[10] = m_BodyPartEx;
			fields[11] = m_ProtocolNa;
			fields[12] = m_FrameOfRef;
			fields[13] = m_SeriesPat;
			fields[14] = m_StudyInsta;
			return fields;
		}
	}
}
