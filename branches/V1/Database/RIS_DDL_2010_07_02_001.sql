/**************************************************************************
-- -Generated by xSQL SDK for Schema Comparison and Synchronization
-- -Date/Time: July 02, 2010 00:37:21

-- -Summary:
    Contains the T-SQL script that makes the database 
    .\SQL2005.RIS_PROD the same as the database .\SQL2005.RIS

-- -Action:
    Execute this script on .\SQL2005.RIS_PROD

-- -SQL Server version: 9.00.4053
**************************************************************************/


/**************************************************************************
Warnings:
Column ClientId will be dropped from the table dbo.tUsers; this can cause the loss of data.
Column HospitalId will be dropped from the table dbo.tUsers; this can cause the loss of data.
**************************************************************************/


BEGIN TRANSACTION
	SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
	SET QUOTED_IDENTIFIER ON
	SET ANSI_NULLS ON
	SET ANSI_PADDING ON
	SET ANSI_WARNINGS ON
	SET ARITHABORT ON
	SET NUMERIC_ROUNDABORT OFF
	SET CONCAT_NULL_YIELDS_NULL ON
	SET XACT_ABORT ON
COMMIT TRANSACTION
GO

IF EXISTS (select * from tempdb..sysobjects where id = OBJECT_ID('tempdb..#ErrorLog')) 
	DROP TABLE #ErrorLog 
CREATE TABLE #ErrorLog 
( pkid [int] IDENTITY(1,1) NOT NULL, errno [int] NOT NULL, errdescr [varchar](100) NULL )
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TABLE [dbo].[tUserGroups] DROP CONSTRAINT [FK_tUserGroups_tGroups]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop foreign key dbo.tUserGroups.FK_tUserGroups_tGroups')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TABLE [dbo].[tStudyGroups] DROP CONSTRAINT [FK_tStudyGroups_tGroups]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop foreign key dbo.tStudyGroups.FK_tStudyGroups_tGroups')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TABLE [dbo].[tGroupRelations] DROP CONSTRAINT [FK_tGroupRelations_tGroups]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop foreign key dbo.tGroupRelations.FK_tGroupRelations_tGroups')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TABLE [dbo].[tGroupRelations] DROP CONSTRAINT [FK_tGroupRelations_tGroups1]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop foreign key dbo.tGroupRelations.FK_tGroupRelations_tGroups1')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TABLE [dbo].[tUsers] DROP CONSTRAINT [FK_tUsers_tClients]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop foreign key dbo.tUsers.FK_tUsers_tClients')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
DROP PROCEDURE [dbo].[AssignHospitalToUser]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop stored procedure dbo.AssignHospitalToUser')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tUsers]
	DROP COLUMN [ClientId]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop column dbo.tUsers.ClientId')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tUsers]
	DROP COLUMN [HospitalId]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop column dbo.tUsers.HospitalId')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
DROP TABLE [dbo].[tGroupRelations]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop table dbo.tGroupRelations')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
DROP TABLE [dbo].[tGroups]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop table dbo.tGroups')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
DROP TABLE [dbo].[tHospitalGroups]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop table dbo.tHospitalGroups')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
DROP TABLE [dbo].[tStudyGroups]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop table dbo.tStudyGroups')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
DROP TABLE [dbo].[tUserGroups]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to drop table dbo.tUserGroups')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tUserClients] (
	[UserClientId] [int] IDENTITY (1,1) NOT NULL,
	[ClientId] [int] NOT NULL,
	[UserId] [int] NOT NULL
) ON [PRIMARY]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add table dbo.tUserClients')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [ClientGUID] [varchar](26) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.ClientGUID')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [Address] [varchar](255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.Address')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [City] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.City')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [State] [varchar](2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.State')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [Zip] [varchar](10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.Zip')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [Phone] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.Phone')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [Fax] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.Fax')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [CreatedBy] [int] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.CreatedBy')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [CreationDate] [datetime] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.CreationDate')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [LastUpdatedBy] [int] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.LastUpdatedBy')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[tClients]
	ADD [LastUpdateDate] [datetime] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.tClients.LastUpdateDate')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[AssignClientsToUser]
	@targetUserId int,
	@sourceUserId int
AS
INSERT INTO tUserClients(UserId,ClientId)
SELECT @targetUserId,ClientId FROM tUserClients WHERE UserId = @sourceUserId;
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.AssignClientsToUser')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[ClientSelectByUserId]
	@userId int
AS
	SET NOCOUNT ON;
SELECT        tClients.*
FROM            tClients
INNER JOIN tUserClients ON tUserClients.ClientId = tClients.ClientId
WHERE tUserClients.UserId = @userId

GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.ClientSelectByUserId')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[HospitalSelectNotByUserId]
	@userId int
AS
	SET NOCOUNT ON;
SELECT        tHospitals.*
FROM            tHospitals
INNER JOIN tUserClients ON tHospitals.ClientId = tUserClients.ClientId
WHERE tHospitals.HospitalId NOT IN (
SELECT HospitalId From tUserHospitals WHERE UserId = @userId)
AND tUserClients.UserId = @userId
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.HospitalSelectNotByUserId')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[UsersSelectByHospitalId]
	@clientId int,
	@hospitalId int,
	@roleId int
AS
	SET NOCOUNT ON;
SELECT      DISTINCT  tUsers.*
FROM            tUsers
inner join tUserClients on tUsers.UserId = tUserClients.UserId
inner join tUserRoles on tUsers.UserId = tUserRoles.UserId
inner join tUserHospitals on tUsers.UserId = tUserHospitals.UserId
WHERE (@clientId = 0 OR tUserClients.ClientId = @clientId)
  AND (@hospitalId =0 OR tUserHospitals.HospitalId = @hospitalId)
  AND (@roleId = 0 OR tUserRoles.RoleId = @roleId)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.UsersSelectByHospitalId')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TABLE [dbo].[tUserClients] ADD 
	CONSTRAINT [PK_tUserClients] PRIMARY KEY CLUSTERED 
	(
		[UserClientId]
	) ON [PRIMARY];
GO

IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add primary key dbo.tUserClients.PK_tUserClients')
END
GO
IF EXISTS (Select * from #ErrorLog)
BEGIN
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
END
ELSE
BEGIN
	IF @@TRANCOUNT>0 COMMIT TRANSACTION
END
IF EXISTS (Select * from #ErrorLog)
BEGIN
	Print 'Database synchronization script failed'
	GOTO QuitWithErrors
END
ELSE
BEGIN
	Print 'Database synchronization completed successfully'
END



QuitWithErrors:


